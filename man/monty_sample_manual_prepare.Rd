% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample-manual.R
\name{monty_sample_manual_prepare}
\alias{monty_sample_manual_prepare}
\title{Prepare to sample with manual scheduling}
\usage{
monty_sample_manual_prepare(
  model,
  sampler,
  n_steps,
  path,
  initial = NULL,
  n_chains = 1L
)
}
\arguments{
\item{model}{The model to sample from; this should be a
\code{monty_model} for now, but we might change this in future to
test to see if things match an interface rather than a
particular class attribute.}

\item{sampler}{A sampler to use.  These will be described later,
but we hope to make these reasonably easy to implement so that
we can try out different sampling ideas.  For now, the only
sampler implemented is \code{\link[=monty_sampler_random_walk]{monty_sampler_random_walk()}}.}

\item{n_steps}{The number of steps to run the sampler for.}

\item{path}{The path to write inputs and outputs to.  This should
be a path to a directory which does not yet exist, or which is
empty; we will create one here.  The contents of this directory
are managed by \code{monty} and the names and contents of files here
are an implementation detail and should not be relied on.
Calling \code{monty_sample_manual_cleanup()} will delete the
directory in its entirety.  Be aware that if you use
\code{\link[=tempfile]{tempfile()}} here (which can be a reasonable choice!) that this
path will be deleted when your R process ends, so if using these
the process calling \code{monty_sample_manual_prepare} should outlive
running all sampling.}

\item{initial}{Optionally, initial parameter values for the
sampling.  If not given, we sample from the model (or its prior).}

\item{n_chains}{Number of chains to run.  The default is to run a
single chain, but you will likely want to run more.}
}
\value{
Invisibly, the path used to store files (the same as the
value of the \code{path} argument)
}
\description{
Run an MCMC, but schedule execution of the chains yourself.  Use
this if you want to distribute chains over (say) the nodes of an
HPC system.  The arguments are the same as for \link{monty_sample},
except that the \code{runner} argument is missing as you will be
looking after that yourself.  After using this function, you will
generally be wanting to run \link{monty_sample_manual_run} and
\link{monty_sample_manual_collect}.
}
\details{
In contrast to \link{monty_sample} there is no \code{runner} argument
here, because by using this function directly you are taking
responsibility for being your own runner.

As with the ways of running a set of chains in monty, it is
expected that using \verb{monty_sample_manual_*} will result in the
same samples being generated as if you had used \code{monty_sample}
with a runner of your choice.
}
\examples{

model <- monty_example("banana")
sampler <- monty_sampler_random_walk(vcv = diag(2) * 0.05)
path <- tempfile()
monty_sample_manual_prepare(model, sampler, 100, path)
monty_sample_manual_info(path)

# Run the (single) chain
monty_sample_manual_run(1, path)
monty_sample_manual_info(path)

# Collect the results
monty_sample_manual_collect(path)

# Clean up samples
monty_sample_manual_cleanup(path)
}
\seealso{
\link{monty_sample_manual_run} to run the chains and
\link{monty_sample_manual_collect} / \link{monty_sample_manual_cleanup} to
collect results and clean up.  \link{monty_sample_manual_info} can
print human-readable information about the state of a manual
run.
}
