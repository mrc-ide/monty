% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runner-callr.R
\name{monty_runner_callr}
\alias{monty_runner_callr}
\title{Run MCMC chains in parallel with \code{callr}}
\usage{
monty_runner_callr(n_workers, progress = NULL)
}
\arguments{
\item{n_workers}{The number of workers to use.  This should be no
larger than the number of chains (though this is harmless) and
no larger than the total number of cores available on your
computer.  Ideally the number of chains you want to run is a
multiple of this number (for example, if you had 8 chains, then
1, 2, 4, and 8 are good choices of \code{n_workers}, and 7 workers
will likely be no faster than 4).}

\item{progress}{Optional logical, indicating if we should print a
progress bar while running.  If \code{NULL}, we use the value of the
option \code{monty.progress} if set, otherwise we show the progress
bar (as it is typically wanted).  The progress bar itself
responds to cli's options; in particular
\code{cli.progress_show_after} and \code{cli.progress_clear} will affect
your experience.  Alternatively, you can provide a string
indicating the progress bar type.  Options are \code{fancy}
(equivalent to \code{TRUE}), \code{none} (equivalent to \code{FALSE}) and
\code{simple} (a very simple text-mode progress indicator designed
play nicely with logging; it does not use special codes to clear
the line).}
}
\value{
A runner of class \code{monty_runner} that can be passed to
\code{\link[=monty_sample]{monty_sample()}}
}
\description{
Run MCMC chains in parallel (at the same time).  This runner uses
the \code{callr} package to distribute your chains over a number of
worker processes on the same machine.  If you have used \code{mcstate},
this is the same as "worker" processes.  Unless your chains take a
few seconds to run, this will be slower than running with the
default serial runner (\link{monty_runner_serial}), however for long
running chains, the speedup will typically scale with workers
added, so long as your chains divide neatly over workers.
}
